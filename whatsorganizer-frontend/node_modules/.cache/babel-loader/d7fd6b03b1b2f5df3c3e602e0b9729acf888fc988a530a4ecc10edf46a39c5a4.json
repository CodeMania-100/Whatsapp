{"ast":null,"code":"import axios from 'axios';\nimport { getAuthToken } from './authService';\nconst API_URL = 'http://localhost:8000/api';\nconst token = getAuthToken();\nconsole.log('Retrieved token:', token);\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n\n// Consolidated request interceptor\napi.interceptors.request.use(config => {\n  const token = getAuthToken(); // Use the getAuthToken function from authService\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const fetchConversations = () => api.get('conversations/');\nexport const fetchFolders = () => api.get('folders/');\nexport const fetchGroups = () => api.get('groups/');\nexport const fetchGroup = id => api.get(`groups/${id}/`);\nexport const searchConversations = query => {\n  return axios.get(`/api/conversations/search/`, {\n    params: {\n      q: query\n    }\n  });\n};\n\n// Update group by ID\nexport const updateGroup = async (id, data) => {\n  const token = getAuthToken();\n  console.log('Updating group with token:', token);\n  console.log('Update data:', data);\n  try {\n    const response = await api.put(`groups/${id}/`, data);\n    console.log('Update response:', response);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error updating group:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    console.error('Full error object:', error);\n    throw error;\n  }\n};\n\n// Update conversation by ID\nexport const updateConversation = (id, data) => api.put(`conversations/${id}/`, data);\n\n// Update folder by ID\nexport const updateFolder = (id, data) => api.put(`folders/${id}/`, data);\nexport default api;","map":{"version":3,"names":["axios","getAuthToken","API_URL","token","console","log","api","create","baseURL","withCredentials","interceptors","request","use","config","headers","error","Promise","reject","response","status","localStorage","removeItem","window","location","href","fetchConversations","get","fetchFolders","fetchGroups","fetchGroup","id","searchConversations","query","params","q","updateGroup","data","put","_error$response","message","updateConversation","updateFolder"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthToken } from './authService';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nconst token = getAuthToken();\r\nconsole.log('Retrieved token:', token);\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  withCredentials: true,\r\n});\r\n\r\n// Consolidated request interceptor\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = getAuthToken(); // Use the getAuthToken function from authService\r\n    if (token) {\r\n      config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  response => response,\r\n  async error => {\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const fetchConversations = () => api.get('conversations/');\r\nexport const fetchFolders = () => api.get('folders/');\r\nexport const fetchGroups = () => api.get('groups/');\r\nexport const fetchGroup = (id) => api.get(`groups/${id}/`);\r\nexport const searchConversations = (query) => {\r\n    return axios.get(`/api/conversations/search/`, {\r\n        params: { q: query }\r\n    });\r\n};\r\n\r\n// Update group by ID\r\nexport const updateGroup = async (id, data) => {\r\n    const token = getAuthToken();\r\n    console.log('Updating group with token:', token);\r\n    console.log('Update data:', data);\r\n    try {\r\n      const response = await api.put(`groups/${id}/`, data);\r\n      console.log('Update response:', response);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating group:', error.response?.data || error.message);\r\n      console.error('Full error object:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n// Update conversation by ID\r\nexport const updateConversation = (id, data) => api.put(`conversations/${id}/`, data);\r\n\r\n// Update folder by ID\r\nexport const updateFolder = (id, data) => api.put(`folders/${id}/`, data);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}