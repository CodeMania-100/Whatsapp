{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api/';\naxios.get('http://127.0.0.1:8000/api/folders/', {\n  withCredentials: true\n}).then(response => {\n  // Handle response\n});\n\n// Fetch all folders\nexport const fetchFolders = () => axios.get(`${API_URL}folders/`);\n\n// Fetch all conversations\nexport const fetchConversations = () => axios.get(`${API_URL}conversations/`);\n\n// Search conversations\nexport const searchConversations = query => axios.get(`${API_URL}conversations/search/`, {\n  params: {\n    q: query\n  }\n});","map":{"version":3,"names":["axios","API_URL","get","withCredentials","then","response","fetchFolders","fetchConversations","searchConversations","query","params","q"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/';\r\naxios.get('http://127.0.0.1:8000/api/folders/', { withCredentials: true })\r\n  .then(response => {\r\n    // Handle response\r\n  });\r\n\r\n// Fetch all folders\r\nexport const fetchFolders = () => axios.get(`${API_URL}folders/`);\r\n\r\n// Fetch all conversations\r\nexport const fetchConversations = () => axios.get(`${API_URL}conversations/`);\r\n\r\n// Search conversations\r\nexport const searchConversations = (query) => axios.get(`${API_URL}conversations/search/`, {\r\n    params: { q: query },\r\n});\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAC5CD,KAAK,CAACE,GAAG,CAAC,oCAAoC,EAAE;EAAEC,eAAe,EAAE;AAAK,CAAC,CAAC,CACvEC,IAAI,CAACC,QAAQ,IAAI;EAChB;AAAA,CACD,CAAC;;AAEJ;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMN,KAAK,CAACE,GAAG,CAAC,GAAGD,OAAO,UAAU,CAAC;;AAEjE;AACA,OAAO,MAAMM,kBAAkB,GAAGA,CAAA,KAAMP,KAAK,CAACE,GAAG,CAAC,GAAGD,OAAO,gBAAgB,CAAC;;AAE7E;AACA,OAAO,MAAMO,mBAAmB,GAAIC,KAAK,IAAKT,KAAK,CAACE,GAAG,CAAC,GAAGD,OAAO,uBAAuB,EAAE;EACvFS,MAAM,EAAE;IAAEC,CAAC,EAAEF;EAAM;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}