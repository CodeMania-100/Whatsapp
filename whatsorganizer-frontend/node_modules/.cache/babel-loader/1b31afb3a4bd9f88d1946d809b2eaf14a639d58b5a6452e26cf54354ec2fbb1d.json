{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\FolderList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderList = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchFolders = () => {\n    const token = localStorage.getItem('auth_token');\n    axios.get('http://localhost:8000/api/folders/', {\n      headers: {\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      console.log('API Response:', response.data); // Log the response\n      if (Array.isArray(response.data)) {\n        setFolders(response.data);\n      } else if (response.data && Array.isArray(response.data.results)) {\n        setFolders(response.data.results);\n      } else {\n        setError('Unexpected data format received from the server');\n      }\n    }).catch(error => {\n      setError(error.message);\n      console.error('Error fetching folders:', error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading folders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No folders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [folder.name, /*#__PURE__*/_jsxDEV(Link, {\n          to: `/folders/edit/${folder.id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, folder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(FolderList, \"mis6mfEOTcpKP4up5x+IO9LJ6OM=\");\n_c = FolderList;\nexport default FolderList;\nvar _c;\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FolderList","_s","folders","setFolders","error","setError","isLoading","setIsLoading","fetchFolders","token","localStorage","getItem","get","headers","then","response","console","log","data","Array","isArray","results","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","folder","name","Link","to","id","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/FolderList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FolderList = () => {\r\n    const [folders, setFolders] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const fetchFolders = () => {\r\n        const token = localStorage.getItem('auth_token');\r\n        axios.get('http://localhost:8000/api/folders/', {\r\n            headers: {\r\n                'Authorization': `Token ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('API Response:', response.data); // Log the response\r\n            if (Array.isArray(response.data)) {\r\n                setFolders(response.data);\r\n            } else if (response.data && Array.isArray(response.data.results)) {\r\n                setFolders(response.data.results);\r\n            } else {\r\n                setError('Unexpected data format received from the server');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.message);\r\n            console.error('Error fetching folders:', error);\r\n        })\r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFolders();\r\n    }, []);\r\n\r\n    if (isLoading) return <div>Loading folders...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Folders</h2>\r\n            {folders.length === 0 ? (\r\n                <p>No folders found.</p>\r\n            ) : (\r\n                <ul>\r\n                {folders.map(folder => (\r\n                    <li key={folder.id}>\r\n                        {folder.name}\r\n                        <Link to={`/folders/edit/${folder.id}`}>Edit</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FolderList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}