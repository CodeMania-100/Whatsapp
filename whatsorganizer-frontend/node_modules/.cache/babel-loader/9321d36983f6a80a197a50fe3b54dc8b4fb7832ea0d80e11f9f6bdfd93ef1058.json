{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\EditGroupComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchGroup, updateGroup } from '../services/api'; // Adjust import as needed\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditGroupComponent = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract group ID from URL params\n  const navigate = useNavigate();\n  const [group, setGroup] = useState(null);\n  const [name, setName] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const getGroup = async () => {\n      try {\n        const response = await fetchGroup(id);\n        setGroup(response.data);\n        setName(response.data.name);\n      } catch (error) {\n        setError('Failed to fetch group details.');\n      }\n    };\n    getGroup();\n  }, [id]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await updateGroup(id, {\n        name\n      });\n      navigate('/groups'); // Redirect after successful update\n    } catch (error) {\n      setError('Failed to update group.');\n    }\n  };\n  if (!group) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(EditGroupComponent, \"H9zmKRGBCYKzMx12WqiMysuxnBQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditGroupComponent;\nexport default EditGroupComponent;\nvar _c;\n$RefreshReg$(_c, \"EditGroupComponent\");","map":{"version":3,"names":["React","useState","useEffect","fetchGroup","updateGroup","useParams","useNavigate","jsxDEV","_jsxDEV","EditGroupComponent","_s","id","navigate","group","setGroup","name","setName","error","setError","getGroup","response","data","handleSubmit","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/EditGroupComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchGroup, updateGroup } from '../services/api'; // Adjust import as needed\r\nimport { useParams, useNavigate  } from 'react-router-dom';\r\n\r\nconst EditGroupComponent = () => {\r\n    const { id } = useParams(); // Extract group ID from URL params\r\n    const navigate = useNavigate();\r\n    \r\n    const [group, setGroup] = useState(null);\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getGroup = async () => {\r\n            try {\r\n                const response = await fetchGroup(id);\r\n                setGroup(response.data);\r\n                setName(response.data.name);\r\n            } catch (error) {\r\n                setError('Failed to fetch group details.');\r\n            }\r\n        };\r\n        getGroup();\r\n    }, [id]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await updateGroup(id, { name });\r\n            navigate('/groups'); // Redirect after successful update\r\n        } catch (error) {\r\n            setError('Failed to update group.');\r\n        }\r\n    };\r\n\r\n    if (!group) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit Group</h2>\r\n            {error && <div>{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update Group</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditGroupComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}