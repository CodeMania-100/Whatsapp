{"ast":null,"code":"import axios from 'axios';\nimport { getAuthToken } from './authService';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n\n// Consolidated request interceptor\napi.interceptors.request.use(config => {\n  const token = getAuthToken(); // Use the getAuthToken function from authService\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const fetchConversations = () => api.get('conversations/');\nexport const fetchFolders = () => api.get('folders/');\nexport const fetchGroups = () => api.get('groups/');\nexport const fetchGroup = id => api.get(`groups/${id}/`);\nexport const searchConversations = query => api.get('conversations/search/', {\n  params: {\n    q: query\n  }\n});\n\n// Update group by ID\nexport const updateGroup = async (id, data) => {\n  const token = getAuthToken();\n  console.log('Updating group with token:', token);\n  console.log('Update data:', data);\n  try {\n    const response = await api.put(`groups/${id}/`, data);\n    console.log('Update response:', response);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error updating group:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    console.error('Full error object:', error);\n    throw error;\n  }\n};\n\n// Update conversation by ID\nexport const updateConversation = (id, data) => api.put(`conversations/${id}/`, data);\n\n// Update folder by ID\nexport const updateFolder = (id, data) => api.put(`folders/${id}/`, data);\nexport default api;","map":{"version":3,"names":["axios","getAuthToken","API_URL","api","create","baseURL","withCredentials","interceptors","request","use","config","token","headers","error","Promise","reject","response","status","localStorage","removeItem","window","location","href","fetchConversations","get","fetchFolders","fetchGroups","fetchGroup","id","searchConversations","query","params","q","updateGroup","data","console","log","put","_error$response","message","updateConversation","updateFolder"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getAuthToken } from './authService';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  withCredentials: true,\r\n});\r\n\r\n// Consolidated request interceptor\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = getAuthToken(); // Use the getAuthToken function from authService\r\n    if (token) {\r\n      config.headers['Authorization'] = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  response => response,\r\n  async error => {\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const fetchConversations = () => api.get('conversations/');\r\nexport const fetchFolders = () => api.get('folders/');\r\nexport const fetchGroups = () => api.get('groups/');\r\nexport const fetchGroup = (id) => api.get(`groups/${id}/`);\r\nexport const searchConversations = (query) => api.get('conversations/search/', { params: { q: query } });\r\n\r\n// Update group by ID\r\nexport const updateGroup = async (id, data) => {\r\n    const token = getAuthToken();\r\n    console.log('Updating group with token:', token);\r\n    console.log('Update data:', data);\r\n    try {\r\n      const response = await api.put(`groups/${id}/`, data);\r\n      console.log('Update response:', response);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating group:', error.response?.data || error.message);\r\n      console.error('Full error object:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n// Update conversation by ID\r\nexport const updateConversation = (id, data) => api.put(`conversations/${id}/`, data);\r\n\r\n// Update folder by ID\r\nexport const updateFolder = (id, data) => api.put(`folders/${id}/`, data);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAE5C,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGV,YAAY,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAIU,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAAC,eAAe,CAAC,GAAG,SAASD,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,EACDG,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAC/B,CAAC;AAEDV,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC3BO,QAAQ,IAAIA,QAAQ,EACpB,MAAMH,KAAK,IAAI;EACb,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnDC,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAGA,CAAA,KAAMpB,GAAG,CAACqB,GAAG,CAAC,gBAAgB,CAAC;AACjE,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMtB,GAAG,CAACqB,GAAG,CAAC,UAAU,CAAC;AACrD,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMvB,GAAG,CAACqB,GAAG,CAAC,SAAS,CAAC;AACnD,OAAO,MAAMG,UAAU,GAAIC,EAAE,IAAKzB,GAAG,CAACqB,GAAG,CAAC,UAAUI,EAAE,GAAG,CAAC;AAC1D,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK3B,GAAG,CAACqB,GAAG,CAAC,uBAAuB,EAAE;EAAEO,MAAM,EAAE;IAAEC,CAAC,EAAEF;EAAM;AAAE,CAAC,CAAC;;AAExG;AACA,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAOL,EAAE,EAAEM,IAAI,KAAK;EAC3C,MAAMvB,KAAK,GAAGV,YAAY,CAAC,CAAC;EAC5BkC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEzB,KAAK,CAAC;EAChDwB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;EACjC,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMb,GAAG,CAACkC,GAAG,CAAC,UAAUT,EAAE,GAAG,EAAEM,IAAI,CAAC;IACrDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEpB,QAAQ,CAAC;IACzC,OAAOA,QAAQ,CAACkB,IAAI;EACtB,CAAC,CAAC,OAAOrB,KAAK,EAAE;IAAA,IAAAyB,eAAA;IACdH,OAAO,CAACtB,KAAK,CAAC,uBAAuB,EAAE,EAAAyB,eAAA,GAAAzB,KAAK,CAACG,QAAQ,cAAAsB,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,KAAIrB,KAAK,CAAC0B,OAAO,CAAC;IAC7EJ,OAAO,CAACtB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;;AAEH;AACA,OAAO,MAAM2B,kBAAkB,GAAGA,CAACZ,EAAE,EAAEM,IAAI,KAAK/B,GAAG,CAACkC,GAAG,CAAC,iBAAiBT,EAAE,GAAG,EAAEM,IAAI,CAAC;;AAErF;AACA,OAAO,MAAMO,YAAY,GAAGA,CAACb,EAAE,EAAEM,IAAI,KAAK/B,GAAG,CAACkC,GAAG,CAAC,WAAWT,EAAE,GAAG,EAAEM,IAAI,CAAC;AAEzE,eAAe/B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}