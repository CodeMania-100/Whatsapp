{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\ConversationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchConversations } from '../services/api'; // Adjust if necessary\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationList = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchConversations(); // Adjust to your actual API call\n        console.log(\"Conversations:\", response.data);\n        setConversations(response.data.results); // Assuming 'results' contains conversations\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching conversations:\", error);\n        setError('Failed to load conversations.');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures this runs only on mount\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading conversations...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No conversations found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conversation.title, /*#__PURE__*/_jsxDEV(Link, {\n          to: `/conversations/edit/${conversation.id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ConversationList, \"h5MS7IQmfDNXFlzmNFoXayhrc5s=\");\n_c = ConversationList;\nexport default ConversationList;\nvar _c;\n$RefreshReg$(_c, \"ConversationList\");","map":{"version":3,"names":["React","useState","useEffect","fetchConversations","Link","jsxDEV","_jsxDEV","ConversationList","_s","conversations","setConversations","loading","setLoading","error","setError","fetchData","response","console","log","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","conversation","title","to","id","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/ConversationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchConversations } from '../services/api'; // Adjust if necessary\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ConversationList = () => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetchConversations(); // Adjust to your actual API call\r\n                console.log(\"Conversations:\", response.data);\r\n                setConversations(response.data.results); // Assuming 'results' contains conversations\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching conversations:\", error);\r\n                setError('Failed to load conversations.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array ensures this runs only on mount\r\n\r\n    if (loading) return <div>Loading conversations...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Conversations</h2>\r\n            {conversations.length === 0 ? (\r\n                <p>No conversations found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {conversations.map(conversation => (\r\n                        <li key={conversation.id}>\r\n                            {conversation.title}\r\n                            <Link to={`/conversations/edit/${conversation.id}`}>Edit</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConversationList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,iBAAiB,CAAC,CAAC;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAC7Cc,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC;QAC5CT,gBAAgB,CAACM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;QACzCR,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZI,OAAO,CAACJ,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,+BAA+B,CAAC;QACzCF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAK;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACvD,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAAe,QAAA,EAAMR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACInB,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBhB,aAAa,CAACiB,MAAM,KAAK,CAAC,gBACvBpB,OAAA;MAAAe,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9BnB,OAAA;MAAAe,QAAA,EACKZ,aAAa,CAACkB,GAAG,CAACC,YAAY,iBAC3BtB,OAAA;QAAAe,QAAA,GACKO,YAAY,CAACC,KAAK,eACnBvB,OAAA,CAACF,IAAI;UAAC0B,EAAE,EAAE,uBAAuBF,YAAY,CAACG,EAAE,EAAG;UAAAV,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAF1DG,YAAY,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CA1CID,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}