{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchGroup, updateGroup } from './api'; // adjust import path as needed\n\nconst EditGroupComponent = () => {\n  // ... existing state and useEffect ...\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await updateGroup(id, {\n        name\n      });\n      navigate('/groups');\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n        console.error(\"Response headers:\", error.response.headers);\n        if (error.response.status === 403) {\n          setError('Permission denied. You may not have the right to edit this group.');\n        } else {\n          setError(`Failed to update group: ${error.response.data.detail || 'Unknown error'}`);\n        }\n      } else {\n        setError('Failed to update group. Please check your network connection.');\n      }\n    }\n  };\n\n  // ... rest of the component ...\n};\n_c = EditGroupComponent;\nexport default EditGroupComponent;\nvar _c;\n$RefreshReg$(_c, \"EditGroupComponent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","fetchGroup","updateGroup","EditGroupComponent","handleSubmit","event","preventDefault","id","name","navigate","error","response","console","data","status","headers","setError","detail","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/EditGroupComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { fetchGroup, updateGroup } from './api';  // adjust import path as needed\r\n\r\nconst EditGroupComponent = () => {\r\n  // ... existing state and useEffect ...\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await updateGroup(id, { name });\r\n      navigate('/groups');\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n        console.error(\"Response headers:\", error.response.headers);\r\n        \r\n        if (error.response.status === 403) {\r\n          setError('Permission denied. You may not have the right to edit this group.');\r\n        } else {\r\n          setError(`Failed to update group: ${error.response.data.detail || 'Unknown error'}`);\r\n        }\r\n      } else {\r\n        setError('Failed to update group. Please check your network connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // ... rest of the component ...\r\n};\r\n\r\nexport default EditGroupComponent;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,UAAU,EAAEC,WAAW,QAAQ,OAAO,CAAC,CAAE;;AAElD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B;;EAEA,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMJ,WAAW,CAACK,EAAE,EAAE;QAAEC;MAAK,CAAC,CAAC;MAC/BC,QAAQ,CAAC,SAAS,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClBC,OAAO,CAACF,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACC,QAAQ,CAACE,IAAI,CAAC;QACpDD,OAAO,CAACF,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACC,QAAQ,CAACG,MAAM,CAAC;QACxDF,OAAO,CAACF,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACC,QAAQ,CAACI,OAAO,CAAC;QAE1D,IAAIL,KAAK,CAACC,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACjCE,QAAQ,CAAC,mEAAmE,CAAC;QAC/E,CAAC,MAAM;UACLA,QAAQ,CAAC,2BAA2BN,KAAK,CAACC,QAAQ,CAACE,IAAI,CAACI,MAAM,IAAI,eAAe,EAAE,CAAC;QACtF;MACF,CAAC,MAAM;QACLD,QAAQ,CAAC,+DAA+D,CAAC;MAC3E;IACF;EACF,CAAC;;EAED;AACF,CAAC;AAACE,EAAA,GA1BIf,kBAAkB;AA4BxB,eAAeA,kBAAkB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}