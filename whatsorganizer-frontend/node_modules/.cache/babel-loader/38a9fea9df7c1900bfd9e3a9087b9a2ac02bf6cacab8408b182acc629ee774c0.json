{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\ConversationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchConversations } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationList = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  useEffect(() => {\n    loadConversations();\n  }, []);\n  const loadConversations = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetchConversations(page);\n      setConversations(prevConversations => [...prevConversations, ...response.data.results]);\n      setHasMore(response.data.next !== null);\n      setPage(prevPage => prevPage + 1);\n    } catch (error) {\n      console.error(\"Error fetching conversations:\", error);\n      setError(\"Failed to load conversations. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), conversations.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No conversations found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conversation.title, \": \", conversation.content]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), !loading && hasMore && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadConversations,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ConversationList, \"H4NOhc0/PJEFG58cCeaJ4F0HwRg=\");\n_c = ConversationList;\nexport default ConversationList;\nvar _c;\n$RefreshReg$(_c, \"ConversationList\");","map":{"version":3,"names":["React","useState","useEffect","fetchConversations","jsxDEV","_jsxDEV","ConversationList","_s","conversations","setConversations","loading","setLoading","error","setError","page","setPage","hasMore","setHasMore","loadConversations","response","prevConversations","data","results","next","prevPage","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","conversation","title","content","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/ConversationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchConversations } from '../services/api';\r\n\r\nconst ConversationList = () => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(true);\r\n\r\n    useEffect(() => {\r\n        loadConversations();\r\n    }, []);\r\n\r\n    const loadConversations = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetchConversations(page);\r\n            setConversations(prevConversations => [...prevConversations, ...response.data.results]);\r\n            setHasMore(response.data.next !== null);\r\n            setPage(prevPage => prevPage + 1);\r\n        } catch (error) {\r\n            console.error(\"Error fetching conversations:\", error);\r\n            setError(\"Failed to load conversations. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Conversations</h2>\r\n            {conversations.length === 0 && !loading ? (\r\n                <p>No conversations found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {conversations.map(conversation => (\r\n                        <li key={conversation.id}>{conversation.title}: {conversation.content}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {loading && <p>Loading...</p>}\r\n            {!loading && hasMore && (\r\n                <button onClick={loadConversations}>Load More</button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConversationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}