{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\ConversationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchConversations } from '../services/api'; // Adjust if necessary\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationList = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchConversations = async () => {\n    try {\n      const response = await axios.get('/api/conversations/');\n      setConversations(response.data.results); // Adjust based on your API response structure\n      setLoading(false);\n    } catch (error) {\n      setError('Failed to load conversations.');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchConversations();\n  }, []); // Ensure this fetches data every time the component is mounted\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [conversation.title, /*#__PURE__*/_jsxDEV(Link, {\n          to: `/conversations/edit/${conversation.id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(ConversationList, \"h5MS7IQmfDNXFlzmNFoXayhrc5s=\");\n_c = ConversationList;\nexport default ConversationList;\nvar _c;\n$RefreshReg$(_c, \"ConversationList\");","map":{"version":3,"names":["React","useState","useEffect","fetchConversations","Link","jsxDEV","_jsxDEV","ConversationList","_s","conversations","setConversations","loading","setLoading","error","setError","response","axios","get","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conversation","title","to","id","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/ConversationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchConversations } from '../services/api'; // Adjust if necessary\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ConversationList = () => {\r\n    const [conversations, setConversations] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const fetchConversations = async () => {\r\n      try {\r\n        const response = await axios.get('/api/conversations/');\r\n        setConversations(response.data.results); // Adjust based on your API response structure\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Failed to load conversations.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      fetchConversations();\r\n    }, []); // Ensure this fetches data every time the component is mounted\r\n  \r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>{error}</div>;\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Conversations</h2>\r\n        <ul>\r\n          {conversations.map((conversation) => (\r\n            <li key={conversation.id}>\r\n              {conversation.title}\r\n              <Link to={`/conversations/edit/${conversation.id}`}>Edit</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ConversationList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,iBAAiB,CAAC,CAAC;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACvDP,gBAAgB,CAACK,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACzCP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;MACzCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIQ,OAAO,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIX,KAAK,EAAE,oBAAOP,OAAA;IAAAc,QAAA,EAAMP;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,EACGX,aAAa,CAACgB,GAAG,CAAEC,YAAY,iBAC9BpB,OAAA;QAAAc,QAAA,GACGM,YAAY,CAACC,KAAK,eACnBrB,OAAA,CAACF,IAAI;UAACwB,EAAE,EAAE,uBAAuBF,YAAY,CAACG,EAAE,EAAG;UAAAT,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFxDE,YAAY,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCED,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAsCpB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}