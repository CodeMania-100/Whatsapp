{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVIV\\\\Desktop\\\\small projects\\\\this is the one\\\\whatsorganizer\\\\whatsorganizer-frontend\\\\src\\\\services\\\\FolderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchFolders } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderList = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchFolders().then(response => {\n      if (Array.isArray(response.data)) {\n        setFolders(response.data);\n      } else {\n        throw new Error('Unexpected response format');\n      }\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching folders:\", error);\n      setError('Failed to fetch folders. Please try again later.');\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading folders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No folders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: folder.name\n      }, folder.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(FolderList, \"97pv9mQfdGBVXz5kdtBPO7GNouQ=\");\n_c = FolderList;\nexport default FolderList;\nvar _c;\n$RefreshReg$(_c, \"FolderList\");","map":{"version":3,"names":["React","useState","useEffect","fetchFolders","jsxDEV","_jsxDEV","FolderList","_s","folders","setFolders","isLoading","setIsLoading","error","setError","then","response","Array","isArray","data","Error","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","folder","name","id","_c","$RefreshReg$"],"sources":["C:/Users/AVIV/Desktop/small projects/this is the one/whatsorganizer/whatsorganizer-frontend/src/services/FolderList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchFolders } from '../services/api';\r\n\r\nconst FolderList = () => {\r\n    const [folders, setFolders] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchFolders()\r\n            .then(response => {\r\n                if (Array.isArray(response.data)) {\r\n                    setFolders(response.data);\r\n                } else {\r\n                    throw new Error('Unexpected response format');\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching folders:\", error);\r\n                setError('Failed to fetch folders. Please try again later.');\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (isLoading) return <div>Loading folders...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Folders</h2>\r\n            {folders.length === 0 ? (\r\n                <p>No folders found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {folders.map(folder => (\r\n                        <li key={folder.id}>{folder.name}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FolderList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZC,YAAY,CAAC,CAAC,CACTW,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;QAC9BT,UAAU,CAACM,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MACAR,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,CACDS,KAAK,CAACR,KAAK,IAAI;MACZS,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,kDAAkD,CAAC;MAC5DF,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE,oBAAOL,OAAA;IAAAiB,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAId,KAAK,EAAE,oBAAOP,OAAA;IAAAiB,QAAA,EAAMV;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACflB,OAAO,CAACmB,MAAM,KAAK,CAAC,gBACjBtB,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBrB,OAAA;MAAAiB,QAAA,EACKd,OAAO,CAACoB,GAAG,CAACC,MAAM,iBACfxB,OAAA;QAAAiB,QAAA,EAAqBO,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}